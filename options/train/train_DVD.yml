# general settings
name: DVD_GoProHazy_TwoStage_Video_Dehazing
model_type: NSDNGANModel
scale: 2 # 1: deblur  2: super resolution
num_gpu: 2  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: GoProHazy
    type: VideoGoProHazyDataset
    dataroot_cf: datasets/foggy_video/train_video/TrainClipsFrames/clearframe
    dataroot_hf: datasets/foggy_video/train_video/TrainClipsFrames/hazyframe_seq
    # matched_txt: datasets/foggy_video/train_video/TrainMatchFrames
    dataroot_flow: ~
    meta_info_file: data/meta_info/meta_info_GoPro_train_frames_seq.txt
    val_partition:   
    num_frame: 2
    cf_resize: 542
    cf_cropsize: 512
    interval_list: [1]
    use_hflip: False
    use_rot: False
    # data loader
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1
    # dataset_enlarge_ratio: 1
    prefetch_mode: ~
    predehazing_model_path: 'pre_dehazing/models/remove_hazy_model_256x256.pth'
    # raft_model_path: 'RAFT/models/raft-things.pth'

  val:
    name: GoProHazy
    type: VideoGoProHazyDataset
    dataroot_cf: datasets/foggy_video/val_video/ValClipsFrames/clearframe
    dataroot_hf: datasets/foggy_video/val_video/ValClipsFrames/hazyframe_seq
    # matched_txt: datasets/foggy_video/val_video/ValMatchFrames
    meta_info_file: data/meta_info/meta_info_GoPro_val_frames_seq.txt
    cache_data: false
    num_frame: 2
    cf_resize: 542
    cf_cropsize: 512
    use_hflip: False
    use_rot: False
    padding: reflection_circle
    predehazing_model_path: 'pre_dehazing/models/remove_hazy_model_256x256.pth'
    

# network structures
network_g:
  # ema_decay: 0.999
  type: NSDNGAN
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_frame: 2
  deformable_groups: 8
  num_extract_block: 5
  num_reconstruct_block: 10
  center_frame_idx: ~
  hr_in: False
  with_tsa: True
  # spynet_model_path: 'pretrain_model/spynet_sintel_final-3d2a1287.pth'

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  pretrain_network_g: 
  strict_load_g: false
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [0.9, 0.99]
    
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  # network_d:
  #   type: VGGStyleDiscriminator
  #   num_in_ch: 3
  #   num_feat: 64
  #   input_size: 512

  # scheduler:
  #   type: CosineAnnealingRestartLR
  #   periods: [50000, 100000, 150000, 150000, 150000]
  #   restart_weights: [1, 1, 1, 1, 1]
  #   eta_min: !!float 1e-7

  scheduler:
    type: MultiStepLR
    milestones: [20000, 40000, 60000]
    gamma: 0.5

  total_iter: 95000
  warmup_iter: -1  # no warm up
  # tsa_iter: 50000
  dcn_lr_mul: 1

  # losses
  contextual_opt:
    type: ContextualLoss
    max_1d_size: 64
    # loss_weight: 1.0
    # reduction: sum
    layers_weights: {'relu_1_2': 1.0,
                     'relu_2_2': 1.0,
                     "relu_3_3": 1.0,
                     "relu_4_3": 1.0,
                     "relu_5_3": 1.0}
    # band_width: 0.5
    # loss_type: 'cosine'

  # losses
  align_opt:
    type: MSELoss
    loss_weight: 1.0

  warp_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  # perceptual_opt:
  #   type: PerceptualLoss
  #   layer_weights:
  #     'conv5_4': 1  # before relu
  #   vgg_type: vgg19
  #   use_input_norm: true
  #   range_norm: false
  #   perceptual_weight: 1.0
  #   style_weight: 0
  #   criterion: l1

  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1
  
  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 5e3
  save_img: True

  metrics: 
    niqe: # metric name, can be arbitrary
      type: calculate_niqe
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true